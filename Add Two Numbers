#Problem 2
#Python

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        carry_one = 0
        #head = ListNode(0)
        if l1.val + l2.val < 10:
            head = ListNode(l1.val + l2.val)
        else:
            head = ListNode((l1.val + l2.val)%10)
            carry_one = 1
        current_node = head
        #print("{} + {}".format(l1.val, l2.val))
        #print("carry_one = {}".format(carry_one))
        l1 = l1.next
        l2 = l2.next
        
        while l1 is not None or l2 is not None:
            if l1 == None:
                if carry_one is 1:
                    if l2.val + 1 < 10:
                        current_node.next = ListNode(l2.val+1)
                        carry_one = 0
                    else:
                        current_node.next = ListNode((l2.val+1)%10)
                else:
                    current_node.next = ListNode(l2.val)
                l2 = l2.next
                current_node = current_node.next
            elif l2 == None:
                if carry_one is 1:
                    if l1.val + 1 < 10:
                        current_node.next = ListNode(l1.val+1)
                        carry_one = 0
                    else:
                        current_node.next = ListNode((l1.val+1)%10)
                else:
                    current_node.next = ListNode(l1.val)
                l1 = l1.next
                current_node = current_node.next
            else:
                if carry_one is 1:
                    if l1.val + l2.val +1 < 10:
                        current_node.next = ListNode(l1.val + l2.val +1)
                        carry_one = 0
                    else:
                        current_node.next = ListNode((l1.val + l2.val +1)%10)
                else:
                    if l1.val + l2.val < 10:
                        current_node.next = ListNode(l1.val + l2.val)
                    else:
                        current_node.next = ListNode((l1.val + l2.val)%10)
                        carry_one = 1
                current_node = current_node.next
                l1 = l1.next
                l2 = l2.next
        if carry_one is 1:
            current_node.next = ListNode(1)
        
        return head
